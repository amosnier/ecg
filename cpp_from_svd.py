import argparse
import xmltodict
import sys
import coding


def main():
    parser = argparse.ArgumentParser(description='Generate C++ header file from ARM SVD file.')
    parser.add_argument('svd_file', help='SVD file')
    parser.add_argument('-o', '--output', help='C++ header file name')
    parser.add_argument('-n', '--namespace', help='C++ namespace', default='mcu_support')
    args = parser.parse_args()
    svd_file = args.svd_file
    h_file = args.output
    stdout = sys.stdout
    namespace = args.namespace
    if h_file:
        sys.stdout = open(h_file, 'w')
    print('/**')
    print(' * Generated by: {}, do not edit by hand'.format(sys.argv[0]))
    print(' * Input file: {}'.format(svd_file))
    print(' * Output file: {}'.format(h_file))
    print(' * Namespace: {}'.format(namespace))
    print(' */\n')
    print('#pragma once\n')
    print('#include <cstddef>\n')
    with open(svd_file) as file:
        doc = xmltodict.parse(file.read())
    coder = coding.Coder(namespace)
    coder.emit_mcu(doc['device'])
    if h_file:
        sys.stdout.close()
        sys.stdout = stdout


if __name__ == '__main__':
    main()
